"use strict";$(function(){var e=$(".page"),t=$(".wrapper"),a=$(".overlay"),l=$(".card");e.on("click",".directory__row",function(){var e=$(this).attr("detailColumn1"),t=$(this).attr("detailColumn2"),o=$(this).attr("detailColumn3"),n=$(this).attr("detailColumn4"),s=$(this).attr("detailColumn5"),u=$(this).attr("detailColumn6");l.find(".detail__column1").attr("src",e),l.find(".detail__column2").text(t),l.find(".detail__column3").text(o),l.find(".detail__column4").text(n),l.find(".detail__column5").text(s),l.find(".detail__column6").text(u),a.fadeIn()}),t.on("click",".button__close",function(){a.fadeOut(),l.find(".detail__column1").attr("",$detailC1),l.find(".detail__column2").text(""),l.find(".detail__column3").text(""),l.find(".detail__column4").text(""),l.find(".detail__column5").text(""),l.find(".detail__column6").text("")})}),$(function(){jsKeyboard.init("virtualKeyboard");var e=$(":input").first().focus();jsKeyboard.currentElement=e,jsKeyboard.currentElementCursorPosition=0});var jsKeyboard={settings:{buttonClass:"button",onclick:"jsKeyboard.write();",keyClass:"key",text:{close:"close"}},keyboard:[],init:function(e,t){jsKeyboard.keyboard["default"]=jsKeyboard.defaultKeyboard,jsKeyboard.keyboardLayout=e,null!=t&&void 0!=t?jsKeyboard.generateKeyboard(t):jsKeyboard.generateKeyboard("default"),jsKeyboard.addKeyDownEvent(),jsKeyboard.show(),$(":input").not('[type="reset"]').not('[type="submit"]').on("focus, click",function(e){jsKeyboard.currentElement=$(this),jsKeyboard.currentElementCursorPosition=$(this).getCursorPosition(),console.log("keyboard is now focused on "+jsKeyboard.currentElement.attr("name")+" at pos("+jsKeyboard.currentElementCursorPosition+")")})},focus:function(e){jsKeyboard.currentElement=$(e),jsKeyboard.show()},keyboardLayout:"",currentKeyboard:"default",currentElement:null,generateKeyboard:function(e){function t(e){a=void 0==e.buttonClass?jsKeyboard.settings.buttonClass:e.buttonClass,l=void 0==e.keyClass?jsKeyboard.settings.keyClass:e.keyClass,o=void 0==e.onclick?jsKeyboard.settings.onclick.replace("()","("+e.value+")"):e.onclick,n=void 0!=e.isChar||0==e.isChar?e.value:String.fromCharCode(e.value),s+='<div class="'+a+'" onclick="'+o+'"><div class="'+l+'">'+n+"</div></div>",a="",l="",o="",n=""}var a="",l="",o="",n="",s="";s+='<div id="keyboard">',s+='<div id="keyboardHeader">',s+="</div>",s+='<div id="keyboardSmallLetter">',$.each(jsKeyboard.keyboard[e].smallLetter,function(e,a){t(a)}),s+="</div>",s+='<div id="keyboardCapitalLetter">',$.each(jsKeyboard.keyboard[e].capitalLetter,function(e,a){t(a)}),s+="</div>",s+='<div id="keyboardNumber">',$.each(jsKeyboard.keyboard[e].number,function(e,a){t(a)}),s+="</div>",s+='<div id="keyboardSymbols">',$.each(jsKeyboard.keyboard[e].symbols,function(e,a){t(a)}),s+="</div>",$("#"+jsKeyboard.keyboardLayout).html(s)},addKeyDownEvent:function(){$("#keyboardCapitalLetter > div.button, #keyboardSmallLetter > div.button, #keyboardNumber > div.button, #keyboardSymbols > div.button").bind("mousedown",function(){$(this).addClass("buttonDown")}).bind("mouseup",function(){$(this).removeClass("buttonDown")}).bind("mouseout",function(){$(this).removeClass("buttonDown")})},changeToSmallLetter:function(){$("#keyboardCapitalLetter,#keyboardNumber,#keyboardSymbols").css("display","none"),$("#keyboardSmallLetter").css("display","block")},changeToCapitalLetter:function(){$("#keyboardCapitalLetter").css("display","block"),$("#keyboardSmallLetter,#keyboardNumber,#keyboardSymbols").css("display","none")},changeToNumber:function(){$("#keyboardNumber").css("display","block"),$("#keyboardSymbols,#keyboardCapitalLetter,#keyboardSmallLetter").css("display","none")},changeToSymbols:function(){$("#keyboardCapitalLetter,#keyboardNumber,#keyboardSmallLetter").css("display","none"),$("#keyboardSymbols").css("display","block")},updateCursor:function(){jsKeyboard.currentElement.setCursorPosition(jsKeyboard.currentElementCursorPosition)},write:function(e){var t=jsKeyboard.currentElement.val(),a=String.fromCharCode(e),l=jsKeyboard.currentElementCursorPosition,o=[t.slice(0,l),a,t.slice(l)].join("");jsKeyboard.currentElement.val(o),jsKeyboard.currentElementCursorPosition++,jsKeyboard.updateCursor()},del:function(){var e=jsKeyboard.currentElement.val(),t=jsKeyboard.currentElementCursorPosition,a=[e.slice(0,t-1),e.slice(t)].join("");jsKeyboard.currentElement.val(a),jsKeyboard.currentElementCursorPosition--,jsKeyboard.updateCursor()},enter:function(){var e=jsKeyboard.currentElement.val();jsKeyboard.currentElement.val(e+"\n")},space:function(){var e=jsKeyboard.currentElement.val(),t=" ",a=jsKeyboard.currentElementCursorPosition,l=[e.slice(0,a),t,e.slice(a)].join("");jsKeyboard.currentElement.val(l),jsKeyboard.currentElementCursorPosition++,jsKeyboard.updateCursor()},writeSpecial:function(e){var t=jsKeyboard.currentElement.val(),a=String.fromCharCode(e),l=jsKeyboard.currentElementCursorPosition,o=[t.slice(0,l),a,t.slice(l)].join("");jsKeyboard.currentElement.val(o),jsKeyboard.currentElementCursorPosition++,jsKeyboard.updateCursor()},show:function(){$("#keyboard").animate({bottom:"0"},"slow",function(){})},hide:function(){$("#keyboard").animate({bottom:"-350px"},"slow",function(){})},defaultKeyboard:{capitalLetter:[{value:81},{value:87},{value:69},{value:82},{value:84},{value:89},{value:85},{value:73},{value:79},{value:80},{value:"Delete",isChar:"false",onclick:"jsKeyboard.del()",buttonClass:"button button_del",keyClass:"key key_del"},{value:65,buttonClass:"button button_a"},{value:83},{value:68},{value:70},{value:71},{value:72},{value:74},{value:75},{value:76},{value:"Enter",isChar:"false",buttonClass:"button button_enter",onclick:"jsKeyboard.enter();",keyClass:"key key_enter"},{value:"abc",isChar:"false",buttonClass:"button button_smallletter",onclick:"jsKeyboard.changeToSmallLetter();",keyClass:"key key_smallletter"},{value:90},{value:88},{value:67},{value:86},{value:66},{value:78},{value:77},{value:44},{value:46},{value:64},{value:"123",isChar:"false",buttonClass:"button button_numberleft",onclick:"jsKeyboard.changeToNumber();",keyClass:"key key_number"},{value:"Space",isChar:"false",buttonClass:"button button_space",onclick:"jsKeyboard.space();",keyClass:"key key_space"},{value:"#$+",isChar:"false",buttonClass:"button button_symbolsright",onclick:"jsKeyboard.changeToSymbols();",keyClass:"key key_symbols"}],smallLetter:[{value:113},{value:119},{value:101},{value:114},{value:116},{value:121},{value:117},{value:105},{value:111},{value:112},{value:"Delete",isChar:"false",onclick:"jsKeyboard.del()",buttonClass:"button button_del",keyClass:"key key_del"},{value:97,buttonClass:"button button_a"},{value:115},{value:100},{value:102},{value:103},{value:104},{value:106},{value:107},{value:108},{value:"Enter",isChar:"false",buttonClass:"button button_enter",onclick:"jsKeyboard.enter();",keyClass:"key key_enter"},{value:"ABC",isChar:"false",buttonClass:"button button_capitalletterleft",onclick:"jsKeyboard.changeToCapitalLetter();",keyClass:"key key_capitalletterleft"},{value:122},{value:120},{value:99},{value:118},{value:98},{value:110},{value:109},{value:44},{value:46},{value:64},{value:"123",isChar:"false",buttonClass:"button button_numberleft",onclick:"jsKeyboard.changeToNumber();",keyClass:"key key_number"},{value:"Space",isChar:"false",buttonClass:"button button_space",onclick:"jsKeyboard.space();",keyClass:"key key_space"},{value:"#%+",isChar:"false",buttonClass:"button button_symbolsright",onclick:"jsKeyboard.changeToSymbols();",keyClass:"key key_symbols"}],number:[{value:49},{value:50},{value:51},{value:52},{value:53},{value:54},{value:55},{value:56},{value:57},{value:48},{value:"Delete",isChar:"false",onclick:"jsKeyboard.del()",buttonClass:"button button_del",keyClass:"key key_del"},{value:45,buttonClass:"button button_dash"},{value:47},{value:58},{value:59},{value:40},{value:41},{value:36},{value:38},{value:64},{value:"Enter",isChar:"false",buttonClass:"button button_enter",onclick:"jsKeyboard.enter();",keyClass:"key key_enter"},{value:"",isChar:"false",buttonClass:"button button_capitalletterleft",onclick:"",keyClass:"key"},{value:63},{value:33},{value:34},{value:124},{value:92},{value:42},{value:61},{value:43},{value:"",isChar:"false",buttonClass:"button",onclick:"",keyClass:"key"},{value:"",isChar:"false",buttonClass:"button",onclick:"",keyClass:"key"},{value:"ABC",isChar:"false",buttonClass:"button button_numberleft",onclick:"jsKeyboard.changeToCapitalLetter();",keyClass:"key key_capitalletterleft"},{value:"Space",isChar:"false",buttonClass:"button button_space",onclick:"jsKeyboard.space();",keyClass:"key key_space"},{value:"#$+",isChar:"false",buttonClass:"button button_symbolsright",onclick:"jsKeyboard.changeToSymbols();",keyClass:"key key_symbols"}],symbols:[{value:91},{value:93},{value:123},{value:125},{value:35},{value:37},{value:94},{value:42},{value:43},{value:61},{value:"Delete",isChar:"false",onclick:"jsKeyboard.del()",buttonClass:"button button_del",keyClass:"key key_del"},{value:95,buttonClass:"button button_underscore"},{value:92},{value:124},{value:126},{value:60},{value:62},{value:"&euro;",isChar:"false",onclick:"jsKeyboard.writeSpecial('&euro;');"},{value:163},{value:165},{value:"Enter",isChar:"false",buttonClass:"button button_enter",onclick:"jsKeyboard.enter();",keyClass:"key key_enter"},{value:"",isChar:"false",buttonClass:"button button_capitalletterleft",onclick:"",keyClass:"key"},{value:46},{value:44},{value:63},{value:33},{value:39},{value:34},{value:59},{value:92},{value:"",isChar:"false",buttonClass:"button",onclick:"",keyClass:"key"},{value:"",isChar:"false",buttonClass:"button",onclick:"",keyClass:"key"},{value:"123",isChar:"false",buttonClass:"button button_numberleft",onclick:"jsKeyboard.changeToNumber();",keyClass:"key key_number"},{value:"Space",isChar:"false",buttonClass:"button button_space",onclick:"jsKeyboard.space();",keyClass:"key key_space"},{value:"ABC",isChar:"false",buttonClass:"button button_symbolsright",onclick:"jsKeyboard.changeToCapitalLetter();",keyClass:"key key_capitalletterleft"}]}};jQuery.fn.getCursorPosition=function(){return 0==this.lengh?-1:$(this).getSelectionStart()},jQuery.fn.getSelectionStart=function(){if(0==this.lengh)return-1;input=this[0];var e=input.value.length;if(input.createTextRange){var t=document.selection.createRange().duplicate();t.moveEnd("character",input.value.length),""==t.text&&(e=input.value.length),e=input.value.lastIndexOf(t.text)}else"undefined"!=typeof input.selectionStart&&(e=input.selectionStart);return e},jQuery.fn.setCursorPosition=function(e){return this.each(function(t,a){if(a.setSelectionRange)a.setSelectionRange(e,e);else if(a.createTextRange){var l=a.createTextRange();l.collapse(!0),l.moveEnd("character",e),l.moveStart("character",e),l.select()}}),this},window.addEventListener("WebComponentsReady",function(e){function t(e){function t(e,t){for(var a in t)e.setAttribute(a,t[a])}var e=e;e.shift(),console.log(e);var a=e.map(function(a){return t(e,{detailColumn1:a[0],detailColumn2:a[1],detailColumn3:a[2],detailColumn4:a[3],detailColumn5:a[4],detailColumn6:a[5]}),"<li>\n                  <p class='column1'><img src="+a[0]+"></p>\n                  <p class='name column2'>\n                    "+a[1]+"\n                  </p>\n                  <p class='title column3'>\n                    "+a[2]+"\n                  </p>\n                  <p class='phone column4'>\n                    "+a[3]+"\n                  </p>\n                  <p class='email column5'>\n                    "+a[4]+"\n                  </p>\n                </li>"});$(".list").append(a)}var a=document.querySelector("rise-google-sheet");a.addEventListener("rise-google-sheet-response",function(e){e.detail&&e.detail.results&&t(e.detail.results)}),a.go()});
//# sourceMappingURL=data:application/json;base64,
